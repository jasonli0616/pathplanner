var searchData=
[
  ['ramseteautobuilder_0',['RamseteAutoBuilder',['../classpathplanner_1_1RamseteAutoBuilder.html',1,'pathplanner::RamseteAutoBuilder'],['../classpathplanner_1_1RamseteAutoBuilder.html#aab9052904b4ff971b22f6512030a85b0',1,'pathplanner::RamseteAutoBuilder::RamseteAutoBuilder(std::function&lt; frc::Pose2d()&gt; pose, std::function&lt; void(frc::Pose2d)&gt; resetPose, frc::RamseteController controller, frc::DifferentialDriveKinematics kinematics, frc::SimpleMotorFeedforward&lt; units::meters &gt; feedforward, std::function&lt; frc::DifferentialDriveWheelSpeeds()&gt; speedsSupplier, PIDConstants driveConstants, std::function&lt; void(units::volt_t, units::volt_t)&gt; output, std::unordered_map&lt; std::string, std::shared_ptr&lt; frc2::Command &gt; &gt; eventMap, std::initializer_list&lt; frc2::Subsystem * &gt; driveRequirements, bool useAllianceColor=false)'],['../classpathplanner_1_1RamseteAutoBuilder.html#aa305dc1317d1e9ca1a360161bc7f987e',1,'pathplanner::RamseteAutoBuilder::RamseteAutoBuilder(std::function&lt; frc::Pose2d()&gt; pose, std::function&lt; void(frc::Pose2d)&gt; resetPose, frc::RamseteController controller, frc::DifferentialDriveKinematics kinematics, std::function&lt; void(units::meters_per_second_t, units::meters_per_second_t)&gt; output, std::unordered_map&lt; std::string, std::shared_ptr&lt; frc2::Command &gt; &gt; eventMap, std::initializer_list&lt; frc2::Subsystem * &gt; driveRequirements, bool useAllianceColor=false)']]],
  ['resetpose_1',['resetPose',['../classpathplanner_1_1BaseAutoBuilder.html#a649e41e4d2866fd68aef926bbecf5aa3',1,'pathplanner::BaseAutoBuilder']]]
];
